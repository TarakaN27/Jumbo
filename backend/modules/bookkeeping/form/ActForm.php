<?php
/**
 * Created by PhpStorm.
 * User: zhenya
 * Date: 20.5.16
 * Time: 11.19
 */

namespace backend\modules\bookkeeping\form;


use common\components\behavior\UploadBehavior;
use common\models\Acts;
use yii\base\Model;
use yii\db\BaseActiveRecord;
use yii\helpers\ArrayHelper;
use Yii;

class ActForm extends Model
{
    public
        $iCUser,                //Контрагент
        $iLegalPerson,          //Юр. лицо
        $iCurr,                 //Валюта
        $arServices = [],       //Услуги
        $fAmount,               //Общая сумма акта (float)
        $arServAmount = [],     //Сумма по услугам
        $arServOrder = [],      //Порядок услуги в акте
        $arServQuantity = [],   //Кол-во по кажой услуге в акте
        $arTemplate = [],       //Шаблон по услугам для генерации
        $iActNumber,            //Номер акта
        $actDate,               //Дата акта
        $arPayment,             //Платежи, которые актируются
        $bCustomAct,            //Bool flag кастомный акт, без генерации
        $fCustomFileAct,        //Файл кастомного акта
        $sContractNumber,       //Номер Контракта
        $contractDate;          //Дата контракта

    /**
     * @return array
     */
    public function rules()
    {
        return [
            [['iCUser','iLegalPerson','iCurr','iActNumber','actDate','sContractNumber','contractDate'],'required'],
            [['actDate','contractDate'],'date','format' => 'php:d.m.Y'],
            [['arServices'],'each','rule' => ['integer']],
            ['fCustomFileAct','file','on' => ['insert'],'when' => function($model) {
                return $model->bCustomAct;
            }],
        ];
    }

    /**
     * @return array
     */
    public function attributeLabels()
    {
        return [
            'iCUser' => Yii::t('app/book','CUser'),
            'iLegalPerson' => Yii::t('app/book','Legal person'),
            'iActNumber' => Yii::t('app/book','Act number'),
            'actDate' => Yii::t('app/book','Act date'),
            'iCurr' => Yii::t('app/book','Currency ID'),
            'fAmount' => Yii::t('app/book','Full amount')
        ];
    }

    /**
     * @return array
     */
    public function behaviors()
    {
        $arParent =  parent::behaviors(); // TODO: Change the autogenerated stub
        return ArrayHelper::merge($arParent,[
            [
                'class' => UploadBehavior::className(),
                'attribute' => 'fCustomFileAct',
                'scenarios' => ['insert'],
                'path' => Acts::FILE_PATH.'/',
                'url' => ''
            ],
        ]);
    }

    /**
     * @return bool
     */
    public function beforeValidate()
    {
        $this->trigger(BaseActiveRecord::EVENT_BEFORE_VALIDATE);
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }


    
    public function makeRequest()
    {
        //add 
        //$this->trigger(BaseActiveRecord::EVENT_BEFORE_INSERT);
        //$this->trigger(BaseActiveRecord::EVENT_AFTER_INSERT);
        


    }


}
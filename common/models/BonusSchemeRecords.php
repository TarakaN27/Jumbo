<?php

namespace common\models;

use Yii;
use yii\helpers\Json;

/**
 * This is the model class for table "{{%bonus_scheme_records}}".
 *
 * @property integer $id
 * @property integer $scheme_id
 * @property string $params
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property BonusScheme $scheme
 */
class BonusSchemeRecords extends AbstractActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%bonus_scheme_records}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['scheme_id'], 'required'],
            [['scheme_id', 'created_at', 'updated_at'], 'integer'],
            [['params'], 'string'],
            [['scheme_id'], 'exist', 'skipOnError' => true, 'targetClass' => BonusScheme::className(), 'targetAttribute' => ['scheme_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app/users', 'ID'),
            'scheme_id' => Yii::t('app/users', 'Scheme ID'),
            'params' => Yii::t('app/users', 'Params'),
            'created_at' => Yii::t('app/users', 'Created At'),
            'updated_at' => Yii::t('app/users', 'Updated At'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getScheme()
    {
        return $this->hasOne(BonusScheme::className(), ['id' => 'scheme_id']);
    }

    /**
     * @return bool
     */
    public function beforeValidate()
    {
        if(is_array($this->params))
            $this->params = Json::encode($this->params);
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        if(is_array($this->params))
            $this->params = Json::encode($this->params);
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * 
     */
    public function afterFind()
    {
        if(empty($this->params))
            $this->params = Json::decode($this->params);
        parent::afterFind(); // TODO: Change the autogenerated stub
    }
}
